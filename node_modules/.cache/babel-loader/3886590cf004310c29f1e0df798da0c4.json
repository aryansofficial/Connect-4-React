{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Desktop\\\\react\\\\connect-4\\\\src\\\\components\\\\icon.js\";\n// import { toast} from 'react-toastify'\nimport React from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Icon = ({\n  title = 'Null',\n  className = ''\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'circle ' + className,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this);\n\n_c = Icon;\n\nconst Button = ({\n  title = 'Null'\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"enter-button\",\n  title: \"drop your discs?\",\n  children: title\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 5\n}, this);\n\n_c2 = Button;\n\nconst ReloadButton = ({\n  ItemArray\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"reload-button button\",\n    onClick: () => {\n      ItemArray.fill('0');\n    },\n    children: \"Reload\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = ReloadButton;\n\nconst Message = ({\n  type,\n  message\n}) => {\n  console.log('FROM MESSAGE ', type, message);\n\n  switch (type) {\n    case 'success':\n      return toast(message, {\n        type: type,\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n\n    case 'error':\n      return toast(message, {\n        type: type,\n        position: toast.POSITION.BOTTOM_RIGHT\n      });\n\n    default:\n      return toast(message, {\n        type: '',\n        position: toast.POSITION.BOTTOM_RIGHT,\n        className: 'game-message toast',\n        autoClose: 8000\n      });\n      break;\n  }\n};\n\n_c4 = Message;\n\nconst InfoButton = ({\n  ItemArray\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"information-zone\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"information button\",\n      onClick: () => {\n        console.log('hello');\n        return toast(`Connect 4 of your disks in any direction a row, a column, or a digonal`, {\n          className: 'full-row-toast toast',\n          position: toast.POSITION.BOTTOM_RIGHT,\n          autoClose: 10000\n        });\n      },\n      children: \"Rules?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReloadButton, {\n      ItemArray: ItemArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_c5 = InfoButton;\n\nconst IconLoader = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [new Array(7).fill('enter-button').map((i, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              enter(index);\n              checkWin();\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this);\n        }), ItemArray.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            title: item,\n            className: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 26\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Score, {\n        redSrore: redScore,\n        yellowScore: yellowScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfoButton, {\n        ItemArray: ItemArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_c6 = IconLoader;\nexport { Icon, Button, Message, InfoButton, ReloadButton, IconLoader };\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Icon\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"ReloadButton\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"InfoButton\");\n$RefreshReg$(_c6, \"IconLoader\");","map":{"version":3,"sources":["C:/Users/aryan/Desktop/react/connect-4/src/components/icon.js"],"names":["React","toast","ToastContainer","Icon","title","className","Button","ReloadButton","ItemArray","fill","Message","type","message","console","log","position","POSITION","BOTTOM_RIGHT","autoClose","InfoButton","IconLoader","Array","map","i","index","enter","checkWin","item","redScore","yellowScore"],"mappings":"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","sourcesContent":["// import { toast} from 'react-toastify'\r\nimport React from 'react'\r\n\r\nimport { toast,ToastContainer } from 'react-toastify'\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css'; \r\n\r\n\r\nconst Icon = ({title='Null',className=''}) => (\r\n    <div>\r\n        <div className={'circle '+className}>\r\n            {title}\r\n        </div>\r\n    </div>\r\n)\r\n\r\n\r\nconst Button = ({title='Null'}) => (\r\n    <div className='enter-button' title='drop your discs?'>\r\n        {title}\r\n    </div>\r\n)\r\n\r\n\r\nconst ReloadButton = ({ItemArray}) => {\r\n    return (\r\n        <button className='reload-button button' onClick={()=>{\r\n            ItemArray.fill('0')\r\n        }}>\r\n            Reload\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nconst Message = ({type, message}) => {\r\n    console.log('FROM MESSAGE ',type, message)\r\n    switch (type) {\r\n        case 'success':\r\n            return toast(message,{\r\n                type: type ,\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        case 'error':\r\n            return toast(message,{\r\n                type: type ,\r\n                position: toast.POSITION.BOTTOM_RIGHT \r\n            })\r\n        default:\r\n            return toast(message,{\r\n                type: '' ,\r\n                position: toast.POSITION.BOTTOM_RIGHT ,\r\n                className:'game-message toast',\r\n                autoClose: 8000                \r\n            })\r\n            break;\r\n    }\r\n}\r\n\r\n\r\nconst InfoButton = ({ItemArray}) => {\r\n    return (\r\n        <div className='information-zone'>\r\n            <button className='information button' onClick={() => {\r\n          console.log('hello')\r\n            return toast(`Connect 4 of your disks in any direction a row, a column, or a digonal`, {\r\n                className: 'full-row-toast toast',\r\n                position: toast.POSITION.BOTTOM_RIGHT,\r\n                autoClose: 10000\r\n            })\r\n        }}>\r\n                Rules?\r\n            </button>\r\n            <ReloadButton ItemArray={ItemArray}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst IconLoader = () => {\r\n    return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <div className='game'>            \r\n            {\r\n              new Array(7).fill('enter-button').map( (i,index) => {\r\n                return (<div onClick={ () => {\r\n                    enter(index)\r\n                    checkWin()\r\n                } }>\r\n                  <Button title='' />\r\n    \r\n                </div>)\r\n              })\r\n            }\r\n              {\r\n                ItemArray.map( (item, index) => {\r\n                  \r\n                  return <Icon title={item} key={index} className={item}/>\r\n                })\r\n              }\r\n            </div>\r\n            <Score redSrore={redScore} yellowScore={yellowScore} />\r\n            <InfoButton ItemArray={ItemArray}/>\r\n          </header>\r\n          <ToastContainer/>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport { Icon, Button, Message , InfoButton , ReloadButton, IconLoader};"]},"metadata":{},"sourceType":"module"}