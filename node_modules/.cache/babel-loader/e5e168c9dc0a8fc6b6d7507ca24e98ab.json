{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Desktop\\\\react\\\\connect-4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Icon, Button, Message } from './components/icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ItemArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41];\nconst split = 7;\n\nconst App = () => {\n  _s();\n\n  const [red, setRed] = useState(true);\n  var checkList = []; // This will eliminate the completed disks\n\n  const checkWin = () => {\n    for (let i = 0; i <= 5; i++) {\n      // full row\n      for (let j = 0; j <= 3; j++) {\n        console.log(`${String(ItemArray[split * i + j]).split(' ')[2]} ${String(ItemArray[split * i + j + 1]).split(' ')[2]} ${String(ItemArray[split * i + j + 2]).split(' ')[2]} ${String(ItemArray[split * i + j + 3]).split(' ')[2]}`);\n\n        if (String(ItemArray[split * i + j]).split(' ')[2] === String(ItemArray[split * i + j + 1]).split(' ')[2] && String(ItemArray[split * i + j + 1]).split(' ')[2] === String(ItemArray[split * i + j + 2]).split(' ')[2] && String(ItemArray[split * i + j + 2]).split(' ')[2] === String(ItemArray[split * i + j + 3]).split(' ')[2] && String(ItemArray[split * i + j + 3]).split(' ')[2] !== undefined) {\n          console.log('CHECKER', !(!checkList.includes(String(ItemArray[split * i + j]).split(' ')[0]) && !checkList.includes(String(ItemArray[split * i + j + 1]).split(' ')[0]) && !checkList.includes(String(ItemArray[split * i + j + 2]).split(' ')[0]) && !checkList.includes(String(ItemArray[split * i + j + 3]).split(' ')[0])));\n\n          if (!(!checkList.includes(String(ItemArray[split * i + j]).split(' ')[0]) && !checkList.includes(String(ItemArray[split * i + j + 1]).split(' ')[0]) && !checkList.includes(String(ItemArray[split * i + j + 2]).split(' ')[0]) && !checkList.includes(String(ItemArray[split * i + j + 3]).split(' ')[0])) || checkList.length == 0) {\n            console.log('MATCH');\n            {\n              /*#__PURE__*/\n              _jsxDEV(_Fragment, {\n                children: [toast('Hello', {\n                  type: 'success',\n                  position: toast.POSITION.BOTTOM_RIGHT\n                }), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true);\n            }\n            checkList.push(String(ItemArray[split * i + j]).split(' ')[0], String(ItemArray[split * i + j + 1]).split(' ')[0], String(ItemArray[split * i + j + 2]).split(' ')[0], String(ItemArray[split * i + j + 3]).split(' ')[0]);\n            console.log(checkList);\n          }\n        }\n      }\n    }\n  };\n\n  const enter = index => {\n    let changed = false; // function to check if the elements are empty and changing color classes\n\n    for (let i = 0; i <= 5; i++) {\n      var element = String(ItemArray[split * i + index]);\n\n      if (element.includes('yellow') || element.includes('red')) {\n        ItemArray[split * (i - 1) + index] += ` circle ${red ? 'red' : 'yellow'}`;\n        console.log('changing in if ');\n        setRed(!red);\n        changed = true;\n        console.log(ItemArray);\n        return;\n      }\n    }\n\n    if (!changed) {\n      ItemArray[split * 5 + index] += ` circle ${red ? 'red' : 'yellow'}`;\n      console.log(\"changing outside\");\n      setRed(!red);\n    }\n\n    console.log(ItemArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [new Array(7).fill('enter-button').map((i, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              enter(index);\n              checkWin();\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this);\n        }), ItemArray.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            title: item,\n            className: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"EPG/mqQxAruRDu1gwWREW6rVlzw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/aryan/Desktop/react/connect-4/src/App.js"],"names":["React","useState","toast","ToastContainer","Icon","Button","Message","ItemArray","split","App","red","setRed","checkList","checkWin","i","j","console","log","String","undefined","includes","length","type","position","POSITION","BOTTOM_RIGHT","push","enter","index","changed","element","Array","fill","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { toast,ToastContainer } from 'react-toastify'\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Icon, Button, Message } from './components/icon'\n\n\nvar ItemArray = \n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\n10, 11, 12, 13, 14, 15, 16, 17, 18, 19, \n20, 21, 22, 23, 24, 25, 26, 27, 28, 29, \n30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40, 41]\nconst split = 7\n\nconst App = () => {\n\n\n  const [ red, setRed ] = useState(true)\n  var checkList = [] // This will eliminate the completed disks\n  \n\n  const checkWin = () => {\n\n    for (let i =0 ; i<= 5 ; i++) {\n      // full row\n      for ( let j=0; j<= 3; j++){\n        console.log(`${String(ItemArray[split*i+j]).split(' ')[2]} ${String(ItemArray[split*i+j+1]).split(' ')[2]} ${String(ItemArray[split*i+j+2]).split(' ')[2]} ${String(ItemArray[split*i+j+3]).split(' ')[2]}`)\n        if (\n          (String(ItemArray[split*i+j]).split(' ')[2] === String(ItemArray[split*i+j+1]).split(' ')[2]) &&\n          (String(ItemArray[split*i+j+1]).split(' ')[2] === String(ItemArray[split*i+j+2]).split(' ')[2]) &&\n          (String(ItemArray[split*i+j+2]).split(' ')[2] === String(ItemArray[split*i+j+3]).split(' ')[2]) &&\n          String(ItemArray[split*i+j+3]).split(' ')[2] !== undefined \n        ) {\n          console.log('CHECKER',!(  !checkList.includes(String(ItemArray[split*i+j]).split(' ')[0]) &&\n          !checkList.includes(String(ItemArray[split*i+j+1]).split(' ')[0]) &&\n          !checkList.includes(String(ItemArray[split*i+j+2]).split(' ')[0]) &&\n          !checkList.includes(String(ItemArray[split*i+j+3]).split(' ')[0])\n          \n      ))\n          if (\n            !(  !checkList.includes(String(ItemArray[split*i+j]).split(' ')[0]) &&\n                !checkList.includes(String(ItemArray[split*i+j+1]).split(' ')[0]) &&\n                !checkList.includes(String(ItemArray[split*i+j+2]).split(' ')[0]) &&\n                !checkList.includes(String(ItemArray[split*i+j+3]).split(' ')[0])\n                \n            ) || checkList.length == 0\n          ) {\n            console.log('MATCH')\n              {<>\n                { \n                  toast('Hello',{\n                    type: 'success' ,\n                    position: toast.POSITION.BOTTOM_RIGHT\n                })\n                }\n                <ToastContainer/>\n              </>}\n              checkList.push(\n                String(ItemArray[split*i+j]).split(' ')[0],\n                String(ItemArray[split*i+j+1]).split(' ')[0],\n                String(ItemArray[split*i+j+2]).split(' ')[0],\n                String(ItemArray[split*i+j+3]).split(' ')[0]\n                )\n                console.log(checkList)\n            }\n          }\n          }\n  }\n  }\n\n  const enter = (index) => {\n    let changed = false\n    // function to check if the elements are empty and changing color classes\n    for (let i = 0; i <= 5; i++) {\n      var element = String(ItemArray[split*i+index])\n      if ( \n        element.includes('yellow') ||\n        element.includes('red')\n        ) {\n          ItemArray[ split * ( i - 1 ) +index ] += ` circle ${red ? 'red' : 'yellow'}`\n          console.log('changing in if ')\n          setRed(!red)\n          changed = true\n          console.log(ItemArray)\n          return\n        }\n    }\n    if (!changed) {\n      ItemArray[split*5+index] += ` circle ${red ? 'red' : 'yellow'}`\n      console.log(\"changing outside\")\n      setRed(!red)\n    }\n    console.log(ItemArray)\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='game'>\n            \n        {\n          new Array(7).fill('enter-button').map( (i,index) => {\n            return (<div onClick={ () => {\n                enter(index)\n                checkWin()\n            } }>\n              <Button title='' />\n\n            </div>)\n          })\n        }\n          {\n            ItemArray.map( (item, index) => {\n              \n              return <Icon title={item} key={index} className={item}/>\n            })\n          }\n        </div>\n      </header>\n      <ToastContainer/>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}