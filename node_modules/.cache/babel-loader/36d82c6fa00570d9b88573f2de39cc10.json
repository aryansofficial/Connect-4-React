{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Desktop\\\\react\\\\connect-4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Icon, Button } from './components/icon';\nimport Score from './components/Score';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ItemArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41];\nconst split = 7;\nvar checkList = []; // This will have the rows\n\nvar checkListColumn = []; // This will have the columns\n\nvar checkListFirstDgonal = []; // This is for first digonal check\n\nvar checkListSecondDgonal = []; // This is for second diginal check\n\nconst App = () => {\n  _s();\n\n  const [red, setRed] = useState(true);\n  const [redScore, setRedScore] = useState(0);\n  const [yellowScore, setYellowScore] = useState(1);\n\n  const checkWin = () => {\n    for (let i = 0; i <= 5; i++) {\n      // full row\n      for (let j = 0; j <= 3; j++) {\n        if (String(ItemArray[split * i + j]).split(' ')[2] === String(ItemArray[split * i + j + 1]).split(' ')[2] && String(ItemArray[split * i + j + 1]).split(' ')[2] === String(ItemArray[split * i + j + 2]).split(' ')[2] && String(ItemArray[split * i + j + 2]).split(' ')[2] === String(ItemArray[split * i + j + 3]).split(' ')[2] && String(ItemArray[split * i + j + 3]).split(' ')[2] !== undefined) {\n          if (!checkList.includes(String(ItemArray[split * i + j]).split(' ')[0]) && !checkList.includes(String(ItemArray[split * i + j + 1]).split(' ')[0]) && !checkList.includes(String(ItemArray[split * i + j + 2]).split(' ')[0]) && !checkList.includes(String(ItemArray[split * i + j + 3]).split(' ')[0]) || checkList.length == 0) {\n            red ? setRed(redSrore++) : setYellowScore(yellowScore++);\n            {\n              /*#__PURE__*/\n              _jsxDEV(_Fragment, {\n                children: toast(`${red ? 'Red' : 'Yellow'} Completed Row`, {\n                  type: 'success',\n                  position: toast.POSITION.BOTTOM_RIGHT,\n                  className: 'toast'\n                })\n              }, void 0, false);\n            }\n            checkList.push(String(ItemArray[split * i + j]).split(' ')[0], String(ItemArray[split * i + j + 1]).split(' ')[0], String(ItemArray[split * i + j + 2]).split(' ')[0], String(ItemArray[split * i + j + 3]).split(' ')[0]);\n          }\n        }\n      }\n    } ////////////////\n\n\n    for (let i = 0; i <= 2; i++) {\n      // full column\n      for (let j = 0; j <= 6; j++) {\n        if (String(ItemArray[split * i + j]).split(' ')[2] === String(ItemArray[split * (i + 1) + j]).split(' ')[2] && String(ItemArray[split * (i + 1) + j]).split(' ')[2] === String(ItemArray[split * (i + 2) + j]).split(' ')[2] && String(ItemArray[split * (i + 2) + j]).split(' ')[2] === String(ItemArray[split * (i + 3) + j]).split(' ')[2] && String(ItemArray[split * i + j]).split(' ')[2] !== undefined) {\n          if (!checkListColumn.includes(String(ItemArray[split * i + j]).split(' ')[0]) && !checkListColumn.includes(String(ItemArray[split * (i + 1) + j]).split(' ')[0]) && !checkListColumn.includes(String(ItemArray[split * (i + 2) + j]).split(' ')[0]) && !checkListColumn.includes(String(ItemArray[split * (i + 3) + j]).split(' ')[0]) || checkListColumn.length === 0) {\n            red ? setRed(redSrore++) : setYellowScore(yellowScore++);\n            toast.success(`${red ? 'Red' : 'Yellow'} Completed a column`, {\n              position: toast.POSITION.BOTTOM_RIGHT,\n              className: 'toast'\n            });\n            checkListColumn.push(String(ItemArray[split * i + j]).split(' ')[0], String(ItemArray[split * (i + 1) + j]).split(' ')[0], String(ItemArray[split * (i + 2) + j]).split(' ')[0], String(ItemArray[split * (i + 3) + j]).split(' ')[0]); // console.log(ItemArray)\n\n            console.log(checkListColumn);\n          }\n        }\n      }\n    } /////////////\n\n\n    for (let i = 0; i <= 2; i++) {\n      // top-right to bottom-left digonals\n      for (let j = 3; j <= 6; j++) {\n        // console.log(`${ItemArray[split*i+j]} ${ItemArray[split*(i+1)+j-1]} ${ItemArray[split*(i+2)+j-2]} ${ItemArray[split*(i+3)+j-3]}`)\n        if (String(ItemArray[split * i + j]).split(' ')[2] === String(ItemArray[split * (i + 1) + j - 1]).split(' ')[2] && String(ItemArray[split * (i + 1) + j - 1]).split(' ')[2] === String(ItemArray[split * (i + 2) + j - 2]).split(' ')[2] && String(ItemArray[split * (i + 2) + j - 2]).split(' ')[2] === String(ItemArray[split * (i + 3) + j - 3]).split(' ')[2] && String(ItemArray[split * i + j]).split(' ')[2] !== undefined) {\n          if (!checkListFirstDgonal.includes(String(ItemArray[split * i + j]).split(' ')[0]) && !checkListFirstDgonal.includes(String(ItemArray[split * (i + 1) + j - 1]).split(' ')[0]) && !checkListFirstDgonal.includes(String(ItemArray[split * (i + 2) + j - 2]).split(' ')[0]) && !checkListFirstDgonal.includes(String(ItemArray[split * (i + 3) + j - 3]).split(' ')[0]) || checkListFirstDgonal.length === 0) {\n            toast.success(`${red ? 'Red' : 'Yellow'} Completed a digonal`, {\n              position: toast.POSITION.BOTTOM_RIGHT,\n              className: 'toast'\n            });\n            checkListFirstDgonal.push(String(ItemArray[split * i + j]).split(' ')[0], String(ItemArray[split * (i + 1) + j - 1]).split(' ')[0], String(ItemArray[split * (i + 2) + j - 2]).split(' ')[0], String(ItemArray[split * (i + 3) + j - 3]).split(' ')[0]); // console.log(ItemArray)\n\n            console.log(checkListFirstDgonal);\n            red ? setRed(redSrore++) : setYellowScore(yellowScore++);\n          }\n        }\n      }\n    } ////////////////\n\n\n    for (let i = 0; i <= 2; i++) {\n      // top-left to bottom-right digonals\n      for (let j = 0; j <= 3; j++) {\n        // console.log(`${ItemArray[split*i+j]} ${ItemArray[split*(i+1)+j+1]} ${ItemArray[split*(i+2)+j+2]} ${ItemArray[split*(i+3)+j+3]}`)\n        if (String(ItemArray[split * i + j]).split(' ')[2] === String(ItemArray[split * (i + 1) + j + 1]).split(' ')[2] && String(ItemArray[split * (i + 1) + j + 1]).split(' ')[2] === String(ItemArray[split * (i + 2) + j + 2]).split(' ')[2] && String(ItemArray[split * (i + 2) + j + 2]).split(' ')[2] === String(ItemArray[split * (i + 3) + j + 3]).split(' ')[2] && String(ItemArray[split * i + j]).split(' ')[2] !== undefined) {\n          if (!checkListSecondDgonal.includes(String(ItemArray[split * i + j]).split(' ')[0]) && !checkListSecondDgonal.includes(String(ItemArray[split * (i + 1) + j + 1]).split(' ')[0]) && !checkListSecondDgonal.includes(String(ItemArray[split * (i + 2) + j + 2]).split(' ')[0]) && !checkListSecondDgonal.includes(String(ItemArray[split * (i + 3) + j + 3]).split(' ')[0]) || checkListSecondDgonal.length === 0) {\n            // console.log('second digonal')\n            toast.success(`${red ? 'Red' : 'Yellow'} Completed a digonal`, {\n              position: toast.POSITION.BOTTOM_RIGHT,\n              className: 'toast'\n            });\n            checkListSecondDgonal.push(String(ItemArray[split * i + j]).split(' ')[0], String(ItemArray[split * (i + 1) + j + 1]).split(' ')[0], String(ItemArray[split * (i + 2) + j + 2]).split(' ')[0], String(ItemArray[split * (i + 3) + j + 3]).split(' ')[0]);\n            red ? setRed(redSrore++) : setYellowScore(yellowScore++); // console.log()\n          }\n        }\n      }\n    }\n\n    console.log(red);\n  };\n\n  const enter = index => {\n    console.log(checkList.length);\n    let changed = false; // function to check if the elements are empty and changing color classes\n\n    for (let i = 0; i <= 5; i++) {\n      var element = String(ItemArray[split * i + index]);\n\n      if (element.includes('yellow') || element.includes('red')) {\n        ItemArray[split * (i - 1) + index] += ` circle ${red ? 'red' : 'yellow'}`;\n        setRed(!red);\n        changed = true;\n        return;\n      }\n    }\n\n    if (!changed) {\n      ItemArray[split * 5 + index] += ` circle ${red ? 'red' : 'yellow'}`; // console.log(\"changing outside\")\n\n      setRed(!red);\n    } // console.log(ItemArray)\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [new Array(7).fill('enter-button').map((i, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              enter(index);\n              checkWin();\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this);\n        }), ItemArray.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            title: item,\n            className: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Score, {\n        redSrore: redScore,\n        blueScore: blueScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mLyTDpRGyCFjmt820SW1642rdw8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/aryan/Desktop/react/connect-4/src/App.js"],"names":["React","useState","toast","ToastContainer","Icon","Button","Score","ItemArray","split","checkList","checkListColumn","checkListFirstDgonal","checkListSecondDgonal","App","red","setRed","redScore","setRedScore","yellowScore","setYellowScore","checkWin","i","j","String","undefined","includes","length","redSrore","type","position","POSITION","BOTTOM_RIGHT","className","push","success","console","log","enter","index","changed","element","Array","fill","map","item","blueScore"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAeC,cAAf,QAAqC,gBAArC;AAEA,OAAO,uCAAP;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,IAAIC,SAAS,GACb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EAEA,EAFA,EAEI,EAFJ,EAEQ,EAFR,EAEY,EAFZ,EAEgB,EAFhB,EAEoB,EAFpB,EAEwB,EAFxB,EAE4B,EAF5B,EAEgC,EAFhC,EAEoC,EAFpC,EAGA,EAHA,EAGI,EAHJ,EAGQ,EAHR,EAGY,EAHZ,EAGgB,EAHhB,EAGoB,EAHpB,EAGwB,EAHxB,EAG4B,EAH5B,EAGgC,EAHhC,EAGoC,EAHpC,EAIA,EAJA,EAII,EAJJ,CADA;AAMA,MAAMC,KAAK,GAAG,CAAd;AACA,IAAIC,SAAS,GAAG,EAAhB,C,CAAmB;;AACnB,IAAIC,eAAe,GAAG,EAAtB,C,CAAyB;;AACzB,IAAIC,oBAAoB,GAAG,EAA3B,C,CAA8B;;AAC9B,IAAIC,qBAAqB,GAAG,EAA5B,C,CAA+B;;AAG/B,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,GAAF,EAAOC,MAAP,IAAkBd,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAAEe,QAAF,EAAYC,WAAZ,IAA4BhB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAAEiB,WAAF,EAAeC,cAAf,IAAkClB,QAAQ,CAAC,CAAD,CAAhD;;AACA,QAAMmB,QAAQ,GAAG,MAAM;AAErB,SAAK,IAAIC,CAAC,GAAE,CAAZ,EAAgBA,CAAC,IAAG,CAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B;AACA,WAAM,IAAIC,CAAC,GAAC,CAAZ,EAAeA,CAAC,IAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACxB,YACGC,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,MAA+Ce,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAhD,IACCe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,MAAiDe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CADlD,IAECe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,MAAiDe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAFlD,IAGAe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,MAAiDgB,SAJnD,EAKE;AAEA,cACK,CAACf,SAAS,CAACgB,QAAV,CAAmBF,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAnB,CAAD,IACC,CAACC,SAAS,CAACgB,QAAV,CAAmBF,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAnB,CADF,IAEC,CAACC,SAAS,CAACgB,QAAV,CAAmBF,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAnB,CAFF,IAGC,CAACC,SAAS,CAACgB,QAAV,CAAmBF,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAnB,CAHL,IAIKC,SAAS,CAACiB,MAAV,IAAoB,CAL3B,EAME;AACEZ,YAAAA,GAAG,GAAIC,MAAM,CAACY,QAAQ,EAAT,CAAV,GAA2BR,cAAc,CAACD,WAAW,EAAZ,CAA5C;AACA;AAAC;AAAA;AAAA,0BAEGhB,KAAK,CAAE,GAAEY,GAAG,GAAI,KAAJ,GAAa,QAAS,gBAA7B,EAA6C;AAChDc,kBAAAA,IAAI,EAAE,SAD0C;AAEhDC,kBAAAA,QAAQ,EAAE3B,KAAK,CAAC4B,QAAN,CAAeC,YAFuB;AAGhDC,kBAAAA,SAAS,EAAC;AAHsC,iBAA7C;AAFR;AAQG;AACJvB,YAAAA,SAAS,CAACwB,IAAV,CACEV,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CADF,EAEEe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAFF,EAGEe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAHF,EAIEe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAR,GAAU,CAAX,CAAV,CAAN,CAA+Bd,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAJF;AAMD;AACF;AACA;AACJ,KAtCkB,CAuCnB;;;AACA,SAAK,IAAIa,CAAC,GAAE,CAAZ,EAAgBA,CAAC,IAAG,CAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B;AACA,WAAM,IAAIC,CAAC,GAAC,CAAZ,EAAeA,CAAC,IAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,YACIC,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,MAAgDe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAjD,IACCe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,MAAoDe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAArD,IACCe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,MAAoDe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAArD,IACCe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,MAA+CgB,SAJnD,EAKE;AACE,cAEI,CAACd,eAAe,CAACe,QAAhB,CAAyBF,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAzB,CAAD,IACA,CAACE,eAAe,CAACe,QAAhB,CAAyBF,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAzB,CADD,IAEA,CAACE,eAAe,CAACe,QAAhB,CAAyBF,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAzB,CAFD,IAGA,CAACE,eAAe,CAACe,QAAhB,CAAyBF,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAzB,CAJH,IAKME,eAAe,CAACgB,MAAhB,KAA2B,CANnC,EAOE;AACEZ,YAAAA,GAAG,GAAIC,MAAM,CAACY,QAAQ,EAAT,CAAV,GAA2BR,cAAc,CAACD,WAAW,EAAZ,CAA5C;AACAhB,YAAAA,KAAK,CAACgC,OAAN,CAAe,GAAEpB,GAAG,GAAG,KAAH,GAAW,QAAS,qBAAxC,EAA8D;AAC5De,cAAAA,QAAQ,EAAE3B,KAAK,CAAC4B,QAAN,CAAeC,YADmC;AAE5DC,cAAAA,SAAS,EAAC;AAFkD,aAA9D;AAIFtB,YAAAA,eAAe,CAACuB,IAAhB,CACEV,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CADF,EAEEe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAFF,EAGEe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAHF,EAIEe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAb,CAAV,CAAN,CAAiCd,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAJF,EANA,CAYE;;AACA2B,YAAAA,OAAO,CAACC,GAAR,CAAY1B,eAAZ;AACH;AACJ;AACJ;AACF,KAzEkB,CA0EnB;;;AACA,SAAK,IAAIW,CAAC,GAAE,CAAZ,EAAgBA,CAAC,IAAG,CAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B;AACA,WAAM,IAAIC,CAAC,GAAC,CAAZ,EAAeA,CAAC,IAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB;AACF,YACGC,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,MAA+Ce,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAAhD,IACCe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,MAAqDe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CADtD,IAECe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,MAAqDe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAFtD,IAGAe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,MAA+CgB,SAJjD,EAKC;AACC,cAEI,CAACb,oBAAoB,CAACc,QAArB,CAA8BF,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAA9B,CAAD,IACA,CAACG,oBAAoB,CAACc,QAArB,CAA8BF,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAA9B,CADD,IAEA,CAACG,oBAAoB,CAACc,QAArB,CAA8BF,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAA9B,CAFD,IAGA,CAACG,oBAAoB,CAACc,QAArB,CAA8BF,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAA9B,CAJH,IAKMG,oBAAoB,CAACe,MAArB,KAAgC,CANxC,EAOE;AACAxB,YAAAA,KAAK,CAACgC,OAAN,CAAe,GAAEpB,GAAG,GAAG,KAAH,GAAW,QAAS,sBAAxC,EAA+D;AAC7De,cAAAA,QAAQ,EAAE3B,KAAK,CAAC4B,QAAN,CAAeC,YADoC;AAE7DC,cAAAA,SAAS,EAAC;AAFmD,aAA/D;AAIArB,YAAAA,oBAAoB,CAACsB,IAArB,CACAV,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CADA,EAEAe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAFA,EAGAe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAHA,EAIAe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAJA,EALA,CAWA;;AACA2B,YAAAA,OAAO,CAACC,GAAR,CAAYzB,oBAAZ;AACAG,YAAAA,GAAG,GAAIC,MAAM,CAACY,QAAQ,EAAT,CAAV,GAA2BR,cAAc,CAACD,WAAW,EAAZ,CAA5C;AACD;AACF;AACF;AACJ,KA7GoB,CA8GrB;;;AAEA,SAAK,IAAIG,CAAC,GAAE,CAAZ,EAAgBA,CAAC,IAAG,CAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B;AACA,WAAM,IAAIC,CAAC,GAAC,CAAZ,EAAeA,CAAC,IAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB;AACF,YACGC,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,MAA+Ce,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAAhD,IACGe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,MAAqDe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CADxD,IAEGe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,MAAqDe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAFxD,IAGEe,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,MAA+CgB,SAJnD,EAKC;AACC,cAEI,CAACZ,qBAAqB,CAACa,QAAtB,CAA+BF,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAA/B,CAAD,IACA,CAACI,qBAAqB,CAACa,QAAtB,CAA+BF,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAA/B,CADD,IAEA,CAACI,qBAAqB,CAACa,QAAtB,CAA+BF,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAA/B,CAFD,IAGA,CAACI,qBAAqB,CAACa,QAAtB,CAA+BF,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAA/B,CAJH,IAKMI,qBAAqB,CAACc,MAAtB,KAAiC,CANzC,EAOC;AACC;AACAxB,YAAAA,KAAK,CAACgC,OAAN,CAAe,GAAEpB,GAAG,GAAG,KAAH,GAAW,QAAS,sBAAxC,EAA+D;AAC7De,cAAAA,QAAQ,EAAE3B,KAAK,CAAC4B,QAAN,CAAeC,YADoC;AAE7DC,cAAAA,SAAS,EAAC;AAFmD,aAA/D;AAIApB,YAAAA,qBAAqB,CAACqB,IAAtB,CACAV,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQC,CAAT,CAAV,CAAN,CAA6Bd,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CADA,EAEAe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAFA,EAGAe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAHA,EAIAe,MAAM,CAAChB,SAAS,CAACC,KAAK,IAAEa,CAAC,GAAC,CAAJ,CAAL,GAAYC,CAAZ,GAAc,CAAf,CAAV,CAAN,CAAmCd,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAJA;AAMAM,YAAAA,GAAG,GAAIC,MAAM,CAACY,QAAQ,EAAT,CAAV,GAA2BR,cAAc,CAACD,WAAW,EAAZ,CAA5C,CAZD,CAaC;AACD;AACF;AACF;AACJ;;AACDiB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,GAAZ;AACG,GApJH;;AAsJA,QAAMuB,KAAK,GAAIC,KAAD,IAAW;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAY3B,SAAS,CAACiB,MAAtB;AACA,QAAIa,OAAO,GAAG,KAAd,CAFuB,CAGvB;;AACA,SAAK,IAAIlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAImB,OAAO,GAAGjB,MAAM,CAAChB,SAAS,CAACC,KAAK,GAACa,CAAN,GAAQiB,KAAT,CAAV,CAApB;;AACA,UACEE,OAAO,CAACf,QAAR,CAAiB,QAAjB,KACAe,OAAO,CAACf,QAAR,CAAiB,KAAjB,CAFF,EAGI;AACAlB,QAAAA,SAAS,CAAEC,KAAK,IAAKa,CAAC,GAAG,CAAT,CAAL,GAAmBiB,KAArB,CAAT,IAA0C,WAAUxB,GAAG,GAAG,KAAH,GAAW,QAAS,EAA3E;AACAC,QAAAA,MAAM,CAAC,CAACD,GAAF,CAAN;AACAyB,QAAAA,OAAO,GAAG,IAAV;AACA;AACD;AACJ;;AACD,QAAI,CAACA,OAAL,EAAc;AACZhC,MAAAA,SAAS,CAACC,KAAK,GAAC,CAAN,GAAQ8B,KAAT,CAAT,IAA6B,WAAUxB,GAAG,GAAG,KAAH,GAAW,QAAS,EAA9D,CADY,CAEZ;;AACAC,MAAAA,MAAM,CAAC,CAACD,GAAF,CAAN;AACD,KApBsB,CAqBvB;;AACD,GAtBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,mBAEE,IAAI2B,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,cAAlB,EAAkCC,GAAlC,CAAuC,CAACtB,CAAD,EAAGiB,KAAH,KAAa;AAClD,8BAAQ;AAAK,YAAA,OAAO,EAAG,MAAM;AACzBD,cAAAA,KAAK,CAACC,KAAD,CAAL;AACAlB,cAAAA,QAAQ;AACX,aAHO;AAAA,mCAIN,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AAJM;AAAA;AAAA;AAAA;AAAA,kBAAR;AAOD,SARD,CAFF,EAaIb,SAAS,CAACoC,GAAV,CAAe,CAACC,IAAD,EAAON,KAAP,KAAiB;AAE9B,8BAAO,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEM,IAAb;AAA+B,YAAA,SAAS,EAAEA;AAA1C,aAAwBN,KAAxB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAHD,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAoBE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEtB,QAAjB;AAA2B,QAAA,SAAS,EAAE6B;AAAtC;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA9MD;;GAAMhC,G;;KAAAA,G;AAiNN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport { toast,ToastContainer } from 'react-toastify'\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Icon, Button } from './components/icon'\n\nimport Score from './components/Score'\n\nvar ItemArray = \n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\n10, 11, 12, 13, 14, 15, 16, 17, 18, 19, \n20, 21, 22, 23, 24, 25, 26, 27, 28, 29, \n30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40, 41]\nconst split = 7\nvar checkList = [] // This will have the rows\nvar checkListColumn = [] // This will have the columns\nvar checkListFirstDgonal = [] // This is for first digonal check\nvar checkListSecondDgonal = [] // This is for second diginal check\n\n\nconst App = () => {\n  const [ red, setRed ] = useState(true)\n  const [ redScore, setRedScore ] = useState(0)\n  const [ yellowScore, setYellowScore ] = useState(1)\n  const checkWin = () => {\n\n    for (let i =0 ; i<= 5 ; i++) {\n      // full row\n      for ( let j=0; j<= 3; j++){\n        if (\n          (String(ItemArray[split*i+j]).split(' ')[2] === String(ItemArray[split*i+j+1]).split(' ')[2]) &&\n          (String(ItemArray[split*i+j+1]).split(' ')[2] === String(ItemArray[split*i+j+2]).split(' ')[2]) &&\n          (String(ItemArray[split*i+j+2]).split(' ')[2] === String(ItemArray[split*i+j+3]).split(' ')[2]) &&\n          String(ItemArray[split*i+j+3]).split(' ')[2] !== undefined \n        ) {\n\n          if (\n            (  !checkList.includes(String(ItemArray[split*i+j]).split(' ')[0]) &&\n                !checkList.includes(String(ItemArray[split*i+j+1]).split(' ')[0]) &&\n                !checkList.includes(String(ItemArray[split*i+j+2]).split(' ')[0]) &&\n                !checkList.includes(String(ItemArray[split*i+j+3]).split(' ')[0])\n            ) || checkList.length == 0\n          ) {\n              red ? (setRed(redSrore++)) : (setYellowScore(yellowScore++))\n              {<>\n                { \n                  toast(`${red ? ('Red') : 'Yellow'} Completed Row`,{\n                    type: 'success' ,\n                    position: toast.POSITION.BOTTOM_RIGHT,\n                    className:'toast'\n                })\n                }\n              </>}\n              checkList.push(\n                String(ItemArray[split*i+j]).split(' ')[0],\n                String(ItemArray[split*i+j+1]).split(' ')[0],\n                String(ItemArray[split*i+j+2]).split(' ')[0],\n                String(ItemArray[split*i+j+3]).split(' ')[0]\n                )\n            }\n          }\n          }\n      }\n      ////////////////\n      for (let i =0 ; i<= 2 ; i++) {\n        // full column\n        for ( let j=0; j<= 6; j++){\n            if (\n              ((String(ItemArray[split*i+j]).split(' ')[2] === (String(ItemArray[split*(i+1)+j]).split(' ')[2])) &&\n              ((String(ItemArray[split*(i+1)+j]).split(' ')[2] === (String(ItemArray[split*(i+2)+j]).split(' ')[2])) &&\n              ((String(ItemArray[split*(i+2)+j]).split(' ')[2] === (String(ItemArray[split*(i+3)+j]).split(' ')[2])) &&\n              ((String(ItemArray[split*i+j]).split(' ')[2] !== undefined )))))) \n              {\n                if (\n                  (\n                    !checkListColumn.includes(String(ItemArray[split*i+j]).split(' ')[0]) &&\n                    !checkListColumn.includes(String(ItemArray[split*(i+1)+j]).split(' ')[0]) &&\n                    !checkListColumn.includes(String(ItemArray[split*(i+2)+j]).split(' ')[0]) &&\n                    !checkListColumn.includes(String(ItemArray[split*(i+3)+j]).split(' ')[0]) \n                  )  || checkListColumn.length === 0\n                ) {\n                    red ? (setRed(redSrore++)) : (setYellowScore(yellowScore++))\n                    toast.success(`${red ? 'Red' : 'Yellow'} Completed a column`, {\n                      position: toast.POSITION.BOTTOM_RIGHT,\n                      className:'toast'\n                    })\n                  checkListColumn.push(\n                    String(ItemArray[split*i+j]).split(' ')[0],\n                    String(ItemArray[split*(i+1)+j]).split(' ')[0],\n                    String(ItemArray[split*(i+2)+j]).split(' ')[0],\n                    String(ItemArray[split*(i+3)+j]).split(' ')[0]\n                    )\n                    // console.log(ItemArray)\n                    console.log(checkListColumn)\n                }\n            }\n        }\n      }\n      /////////////\n      for (let i =0 ; i<= 2 ; i++) {\n        // top-right to bottom-left digonals\n        for ( let j=3; j<= 6; j++){\n            // console.log(`${ItemArray[split*i+j]} ${ItemArray[split*(i+1)+j-1]} ${ItemArray[split*(i+2)+j-2]} ${ItemArray[split*(i+3)+j-3]}`)\n          if (\n            (String(ItemArray[split*i+j]).split(' ')[2] === String(ItemArray[split*(i+1)+j-1]).split(' ')[2]) &&\n            (String(ItemArray[split*(i+1)+j-1]).split(' ')[2] === String(ItemArray[split*(i+2)+j-2]).split(' ')[2]) &&\n            (String(ItemArray[split*(i+2)+j-2]).split(' ')[2] === String(ItemArray[split*(i+3)+j-3]).split(' ')[2]) &&\n            String(ItemArray[split*i+j]).split(' ')[2] !== undefined \n          ){\n            if (\n              (\n                !checkListFirstDgonal.includes(String(ItemArray[split*i+j]).split(' ')[0]) &&\n                !checkListFirstDgonal.includes(String(ItemArray[split*(i+1)+j-1]).split(' ')[0]) &&\n                !checkListFirstDgonal.includes(String(ItemArray[split*(i+2)+j-2]).split(' ')[0]) &&\n                !checkListFirstDgonal.includes(String(ItemArray[split*(i+3)+j-3]).split(' ')[0]) \n              )  || checkListFirstDgonal.length === 0\n            ) {\n              toast.success(`${red ? 'Red' : 'Yellow'} Completed a digonal`, {\n                position: toast.POSITION.BOTTOM_RIGHT,\n                className:'toast'\n              })\n              checkListFirstDgonal.push(\n              String(ItemArray[split*i+j]).split(' ')[0],\n              String(ItemArray[split*(i+1)+j-1]).split(' ')[0],\n              String(ItemArray[split*(i+2)+j-2]).split(' ')[0],\n              String(ItemArray[split*(i+3)+j-3]).split(' ')[0]\n              )\n              // console.log(ItemArray)\n              console.log(checkListFirstDgonal)\n              red ? (setRed(redSrore++)) : (setYellowScore(yellowScore++))\n            }\n          }\n        }\n    }\n    ////////////////\n   \n    for (let i =0 ; i<= 2 ; i++) {\n      // top-left to bottom-right digonals\n      for ( let j=0; j<= 3; j++){\n          // console.log(`${ItemArray[split*i+j]} ${ItemArray[split*(i+1)+j+1]} ${ItemArray[split*(i+2)+j+2]} ${ItemArray[split*(i+3)+j+3]}`)\n        if (\n          (String(ItemArray[split*i+j]).split(' ')[2] === String(ItemArray[split*(i+1)+j+1]).split(' ')[2]) &&\n            (String(ItemArray[split*(i+1)+j+1]).split(' ')[2] === String(ItemArray[split*(i+2)+j+2]).split(' ')[2]) &&\n            (String(ItemArray[split*(i+2)+j+2]).split(' ')[2] === String(ItemArray[split*(i+3)+j+3]).split(' ')[2]) &&\n            String(ItemArray[split*i+j]).split(' ')[2] !== undefined \n        ){\n          if (\n            (\n              !checkListSecondDgonal.includes(String(ItemArray[split*i+j]).split(' ')[0]) &&\n              !checkListSecondDgonal.includes(String(ItemArray[split*(i+1)+j+1]).split(' ')[0]) &&\n              !checkListSecondDgonal.includes(String(ItemArray[split*(i+2)+j+2]).split(' ')[0]) &&\n              !checkListSecondDgonal.includes(String(ItemArray[split*(i+3)+j+3]).split(' ')[0]) \n            )  || checkListSecondDgonal.length === 0\n          ){\n            // console.log('second digonal')\n            toast.success(`${red ? 'Red' : 'Yellow'} Completed a digonal`, {\n              position: toast.POSITION.BOTTOM_RIGHT,\n              className:'toast'\n            })\n            checkListSecondDgonal.push(\n            String(ItemArray[split*i+j]).split(' ')[0],\n            String(ItemArray[split*(i+1)+j+1]).split(' ')[0],\n            String(ItemArray[split*(i+2)+j+2]).split(' ')[0],\n            String(ItemArray[split*(i+3)+j+3]).split(' ')[0]\n            )\n            red ? (setRed(redSrore++)) : (setYellowScore(yellowScore++))\n            // console.log()\n          }\n        }\n      }\n  }\n  console.log(red)\n    }\n\n  const enter = (index) => {\n    console.log(checkList.length)\n    let changed = false\n    // function to check if the elements are empty and changing color classes\n    for (let i = 0; i <= 5; i++) {\n      var element = String(ItemArray[split*i+index])\n      if ( \n        element.includes('yellow') ||\n        element.includes('red')\n        ) {\n          ItemArray[ split * ( i - 1 ) +index ] += ` circle ${red ? 'red' : 'yellow'}`\n          setRed(!red)\n          changed = true\n          return\n        }\n    }\n    if (!changed) {\n      ItemArray[split*5+index] += ` circle ${red ? 'red' : 'yellow'}`\n      // console.log(\"changing outside\")\n      setRed(!red)\n    }\n    // console.log(ItemArray)\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='game'>            \n        {\n          new Array(7).fill('enter-button').map( (i,index) => {\n            return (<div onClick={ () => {\n                enter(index)\n                checkWin()\n            } }>\n              <Button title='' />\n\n            </div>)\n          })\n        }\n          {\n            ItemArray.map( (item, index) => {\n              \n              return <Icon title={item} key={index} className={item}/>\n            })\n          }\n        </div>\n        <Score redSrore={redScore} blueScore={blueScore} />\n      </header>\n      <ToastContainer/>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}