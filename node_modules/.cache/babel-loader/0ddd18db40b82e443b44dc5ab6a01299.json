{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryan\\\\Desktop\\\\react\\\\connect-4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Icon, Button, Message } from './components/icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ItemArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41];\nconst split = 7;\n\nconst App = () => {\n  _s();\n\n  const [red, setRed] = useState(true);\n  var checkList = []; // This will eliminate the completed disks\n\n  const checkWin = () => {\n    // checking the rows\n    for (let i = 0; i <= 3; i++) {\n      // console.log('Check win ', String( ItemArray[i]).split(' ')[2])\n      console.log(i, typeof ItemArray[i + 3] !== 'number', String(ItemArray[i]).split(' ')[2]);\n\n      if (String(ItemArray[i]).split(' ')[2] === String(ItemArray[i + 1]).split(' ')[2] && String(ItemArray[i + 1]).split(' ')[2] === String(ItemArray[i + 2]).split(' ')[2] && String(ItemArray[i + 2]).split(' ')[2] === String(ItemArray[i + 3]).split(' ')[2] && //  (String( ItemArray[i+3]).split(' ')[2] === String(ItemArray[i+4]).split(' ')[2]) &&\n      typeof ItemArray[i + 3] !== 'number') {\n        {\n          alert('hello');\n        }\n        {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Message, {\n              type: \"success\",\n              message: \"hello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 18\n          }, this);\n        }\n        console.log('match');\n      }\n    }\n  };\n\n  const enter = index => {\n    let changed = false; // function to check if the elements are empty and changing color classes\n\n    for (let i = 0; i <= 5; i++) {\n      var element = String(ItemArray[split * i + index]);\n\n      if (element.includes('yellow') || element.includes('red')) {\n        ItemArray[split * (i - 1) + index] += ` circle ${red ? 'red' : 'yellow'}`;\n        console.log('changing in if ');\n        setRed(!red);\n        changed = true;\n        console.log(ItemArray);\n        return;\n      }\n    }\n\n    if (!changed) {\n      ItemArray[split * 5 + index] += ` circle ${red ? 'red' : 'yellow'}`;\n      console.log(\"changing outside\");\n      setRed(!red);\n    }\n\n    console.log(ItemArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [new Array(7).fill('enter-button').map((i, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              enter(index);\n              checkWin();\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              title: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this);\n        }), ItemArray.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Icon, {\n            title: item,\n            className: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"EPG/mqQxAruRDu1gwWREW6rVlzw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/aryan/Desktop/react/connect-4/src/App.js"],"names":["React","useState","ToastContainer","Icon","Button","Message","ItemArray","split","App","red","setRed","checkList","checkWin","i","console","log","String","alert","enter","index","changed","element","includes","Array","fill","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { ToastContainer } from 'react-toastify'\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport { Icon, Button, Message } from './components/icon'\n\n\nvar ItemArray = \n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\n10, 11, 12, 13, 14, 15, 16, 17, 18, 19, \n20, 21, 22, 23, 24, 25, 26, 27, 28, 29, \n30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \n40, 41]\nconst split = 7\n\nconst App = () => {\n\n  const [ red, setRed ] = useState(true)\n  var checkList = [] // This will eliminate the completed disks\n  \n  const checkWin = () => {\n    \n    // checking the rows\n    for ( let i = 0; i <= 3; i++ ){\n      // console.log('Check win ', String( ItemArray[i]).split(' ')[2])\n      console.log(i ,typeof ItemArray[i+3] !== 'number', (String( ItemArray[i]).split(' ')[2]))\n      if ( (String( ItemArray[i]).split(' ')[2] === String(ItemArray[i+1]).split(' ')[2]) &&\n           (String( ItemArray[i+1]).split(' ')[2] === String(ItemArray[i+2]).split(' ')[2]) &&\n           (String( ItemArray[i+2]).split(' ')[2] === String(ItemArray[i+3]).split(' ')[2]) &&\n          //  (String( ItemArray[i+3]).split(' ')[2] === String(ItemArray[i+4]).split(' ')[2]) &&\n           (typeof ItemArray[i+3] !== 'number')\n      ){\n        {alert('hello')}\n        {return (<div>\n          <Message type='success' message='hello'/>\n          <ToastContainer/>\n        </div>)}\n        console.log('match')\n        \n      }\n    }\n\n  }\n\n  const enter = (index) => {\n    let changed = false\n    // function to check if the elements are empty and changing color classes\n    for (let i = 0; i <= 5; i++) {\n      var element = String(ItemArray[split*i+index])\n      if ( \n        element.includes('yellow') ||\n        element.includes('red')\n        ) {\n          ItemArray[ split * ( i - 1 ) +index ] += ` circle ${red ? 'red' : 'yellow'}`\n          console.log('changing in if ')\n          setRed(!red)\n          changed = true\n          console.log(ItemArray)\n          return\n        }\n    }\n    if (!changed) {\n      ItemArray[split*5+index] += ` circle ${red ? 'red' : 'yellow'}`\n      console.log(\"changing outside\")\n      setRed(!red)\n    }\n    console.log(ItemArray)\n    \n  }\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className='game'>\n        {\n          new Array(7).fill('enter-button').map( (i,index) => {\n            return (<div onClick={ () => {\n                enter(index)\n                checkWin()\n            } }>\n              <Button title='' />\n              \n            </div>)\n          })\n        }\n          {\n            ItemArray.map( (item, index) => {\n              return <Icon title={item} key={index} className={item}/>\n            })\n          }\n        </div>\n      </header>\n      \n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}